{"version":3,"sources":["serviceWorker.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Components/cast.js","Containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","name","quote","photo","id","className","alt","src","CardList","cast","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","username","App","onSearchChange","event","searchfield","target","value","filteredCast","filter","character","toLowerCase","includes","length","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.901bf0de.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';  \r\n\r\nconst Card = ({ name, quote, id, photo }) => {    \r\n    return(\r\n        <div className='tc bg-washed-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>  \r\n            <img alt={name} src={photo}></img>\r\n            {/* <img alt={name} src=\"./assets/cast_bunny.png\"></img> */}\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p className='b'>{quote}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';  \r\nimport Card from './Card'; \r\n\r\nconst CardList = ({ cast }) => {\r\n    return(\r\n        <div>               \r\n            {\r\n                cast.map((user, i) => {               \r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={cast[i].id} \r\n                        photo={cast[i].photo}\r\n                        name={cast[i].name} \r\n                        quote={cast[i].quote}\r\n                        />  \r\n                     );\r\n                })\r\n            }\r\n         </div>\r\n    ); \r\n}\r\n\r\nexport default CardList","import React from 'react';  \r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--dark-gray bg-white-90'\r\n                type='search' \r\n                placeholder='search cast' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox ","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        \thasError: false\r\n        }\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender(){\r\n        if (this.state.hasError) {\r\n            return <h1>Oops, error.</h1>\r\n        }\r\n    return this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","export const cast = [\r\n  {\r\n    id: 1,\r\n    photo: './assets/cast_dude2.png',\r\n    name: 'The Dude',\r\n    username: 'Dude',\r\n    quote: 'Careful, Theres A Beverage Here'\r\n  },\r\n  {\r\n    id: 2,\r\n    photo: './assets/cast_walter.png',\r\n    name: 'Walter',\r\n    username: 'Walter Sobchak',\r\n    quote: 'Am I The Only One Around Here'\r\n  },\r\n  {\r\n    id: 3,\r\n    photo: './assets/cast_donny.png',\r\n    name: 'Donny',\r\n    username: 'Theodore',\r\n    quote: 'Shut Up, Donny!'\r\n  },\r\n  {\r\n    id: 4,\r\n    photo: './assets/cast_jesus.png',\r\n    name: 'Jesus Quintana',\r\n    username: 'Jesus Quintana',\r\n    quote: 'Nobody Messes With The Jesus'\r\n  },\r\n  {\r\n    id: 5,\r\n    photo: './assets/cast_maude.png',\r\n    name: 'Maude Lebowski',\r\n    username: 'Maude',\r\n    quote: 'At least Im housebroken'\r\n  },\r\n  {\r\n    id: 6,\r\n    photo: './assets/cast_stranger.png',\r\n    name: 'The Stranger',\r\n    username: 'The Stranger',\r\n    quote: 'The Dude Abides'\r\n  },\r\n  {\r\n    id: 7,\r\n    photo: './assets/cast_biglebowski.png',\r\n    name: 'Big Lebowski',\r\n    username: 'Big Lebowski',\r\n    quote: 'This Aggression Will Not Stand'\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    photo: './assets/cast_bunny.png',\r\n    name: 'Bunny Lebowski',\r\n    username: 'Bunny',\r\n    quote: 'Mind If I Do A J?'\r\n  },\r\n\r\n  {\r\n    id: 9,\r\n    photo: './assets/cast_team.png',\r\n    name: 'His Dudeness',\r\n    username: 'Dude',\r\n    quote: 'Well, Thats Just Like Your Opinion Man'\r\n  },\r\n  {\r\n    id: 10,\r\n    photo: './assets/cast_rug.png',\r\n    name: 'The Rug',\r\n    username: 'Moriah.Stanton',\r\n    quote: 'The Rug Really Ties The Room Together'\r\n  }\r\n];\r\n","import './App.css';\r\nimport React, { Component }from 'react';  \r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\nimport { cast } from '../Components/cast';      \r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super() \r\n        this.state = {\r\n            cast: cast,\r\n            searchfield: ''  \r\n        }\r\n    }\r\n    \r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const { cast, searchfield } = this.state\r\n        const filteredCast = cast.filter(character =>{\r\n            return character.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (cast.length === 0) {\r\n            return <h1>loading</h1>\r\n        } else {\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>Big Lebowski Cast</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList cast={filteredCast}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';   \r\nimport App from './Containers/App'\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();                   \r\n"],"sourceRoot":""}